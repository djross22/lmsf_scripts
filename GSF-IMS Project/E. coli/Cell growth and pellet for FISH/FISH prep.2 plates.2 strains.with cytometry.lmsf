//isPipetting is a variable passed to the Hamilton Venus method; if isPipetting is true, the STAR will pipette liquids; otherwise the STAR just moves plates around
Set(isPipetting, true)
//isDebugging controls whether or not user debugging prompts/messages are displayed (both in LMSF and Hamilton)
Set(isDebugging, false)

//No DNA extraction for this version of the script
Set(keepOldGrowthPlate, false)

//manualSeal controls whether sealing is manual or automatic
//Set(manualSeal, Yes)
Set(manualSeal, No)

/////////////////////////////////////////////////////////////////
//Read in commonly used directories
ReadScript(C:\Users\PAA\Documents\LMSF Scheduler\Common protocol scripts\Set Common Directories.lmsf)
Set(hamiltonMethodDir, C:\Program Files (x86)\Hamilton\Methods\GSF-IMS Project\E. coli Methods\Cell growth and pellet for FISH)
Set(sharedHamiltonMethodDir, C:\Program Files (x86)\Hamilton\Methods\GSF-IMS Project\E. coli Methods\Fitness Selection 1.With DNA Extraction)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Set directories for  .hsl, .opv, and .prt files that are specifc to this experiment
Set(ovpDirectory, C:\Program Files (x86)\PAA\Overlord3\Procedures\GSF-IMS\E. coli\Fitness Selection 1)
Set(scriptDir, C:\Users\PAA\Documents\LMSF Scheduler\GSF-IMS Project\E. coli\Cell growth and pellet for FISH)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Hamilton Venus Methods, in the order that they get run
Set(startMethod, {hamiltonMethodDir}\Uniform non-selective plate prep plus starting bacteria.1201 plus IMS construct.hsl)
Set(nonSelectiveGradientMethod, {hamiltonMethodDir}\Inducer gradient plate prep.hsl)
Set(cytometryPrepMethod, {hamiltonMethodDir}\Prep cytometry plate.hsl)
Set(cytometryTransferMethod, {hamiltonMethodDir}\Transfer cells from old GP to Cytometry Plate.hsl)

Set(preHeatPlateMethod, {sharedHamiltonMethodDir}\Pre-heat growth plate.hsl)
//Plate pre-heating method takes 12m:16s to run
Set(preHeatPlateTime, 736)
Set(copyPlateMethod, {sharedHamiltonMethodDir}\Dilute-copy plate x-fold with 96-head.hsl)
Set(combineToSpinPlateMethod, {sharedHamiltonMethodDir}\Combine old GP wells into Spin Plate.hsl)
Set(moveOldPlateMethod, {sharedHamiltonMethodDir}\Move Old GP to parking.hsl)

//Venus method constrains 200<=cultureVolume<=500
Set(cultureVolume, 500)


/////////////////////////////////////////////////////////////////
//Gen5 protcols to be run and associated timers:
Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 16h.37C.1C.Ex500Em530.prt)
//overNightProtocolTime = nominal run time + 300
Set(overNightProtocolTime, 57900)

Set(repeatProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 2h.35m.37C.1C.Ex500Em530.prt)
//repeatProtocolTime = nominal run time + 300
Set(repeatProtocolTime, 9600)

//Gen5 protocol for testing readers at beginning of run to give consistent starting state
Set(initProtocol, {gen5ProtDir}\Growth Plate w Membrane short test.prt)
/////////////////////////////////////////////////////////////////

//Set readers to be used
Set(mainReader, Neo)

/////////////////////////////////////
//This section sets shorter Gen5 protocols for testing, set isTesting to false for actual experiment
Set(isTesting, false)
GetUserYesNo(isTesting, Testing?, Is this a test run (short Gen5 protocols)?)

Set(testProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 1h.37C.1C.prt)
If({isTesting}==Yes, Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 35m.37C.1C.prt))
//overNightProtocolTime = nominal run time + 300
If({isTesting}==Yes, Set(overNightProtocolTime, 2400))
If({isTesting}==Yes, Set(repeatProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 30m.37C.1C.prt))
//repeatProtocolTime = nominal run time + 300
If({isTesting}==Yes, Set(repeatProtocolTime, 2100))
/////////////////////////////////////////

/////////////////////////////////////////
//Set any other short-hand dictionary keys that will be used repeatedly
Set(getNewGrowthPlate, {ovpCommDirectory}\Labware\Move Tips and New Growth Plate to STAR.ovp)
Set(getNewTips, {ovpCommDirectory}\Labware\Move Tips from Carousel to STAR.ovp)
Set(clearTipRackOvp, {ovpCommDirectory}\Labware\Move Tips from STAR to Waste.ovp)
Set(getNewSpinPlate, {ovpCommDirectory}\Labware\Move DWP from stack 9 to STAR.ovp)
Set(centrifugeSpinPlate, {ovpCommDirectory}\Get DWP from STAR then Centrifuge DWP.ovp)
/////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////
//User input and Overlord initialization section

StartPrompt(E. Coli Fitness Selection, {scriptDir}\FISH prep.2 plates.2 strains.with cytometry-list.txt)

UserPrompt(Check STAR Hamilton Run Control, Make sure that the Hamilton Run Control program on the STAR computer is NOT in simulation mode.)
UserPrompt(Check STAR Hamilton Tips, Make sure there are at least 88 1000 uL tips in the tip supports on the deck of the STAR., {lmsfImageDirectory}\Tip supports 1000.PNG)
UserPrompt(Check STAR Hamilton Tips, Make sure there are at least 70 300 uL tips in the tip supports on the deck of the STAR., {lmsfImageDirectory}\Tip supports 300.PNG)

Set(msg2, Make sure there is at least one rack of 300 uL tips in the PAA Carousel (hotel no. 2).\n)
UserPrompt(Tips, {msg2}, {lmsfImageDirectory}\Tip Hotel 2.png)
Set(tips300Index, 1)

NewXML(growth plate prep)

Overlord({ovpCommDirectory}\Initialize Robot Carousel Sealer and Pealer.ovp)

Get(user, user)

Get(media, media)

Set(msg1, Select the bacteria strain used for the FISH zero-transcription reference, column 1 in the experiment:)
Get(strain, strain1, {msg1})
Set(msg1, Select the plasmid used for the FISH zero-transcription reference, column 1 in the experiment:)
Get(plasmid, plasmid1, {msg1})

Set(msg1, Select the bacteria strain used for the inducible construct, columns 2-12 in the experiment:)
Get(strain, strain2, {msg1})
Set(msg1, Select the plasmid used for for the inducible construct, columns 2-12 in the experiment:)
Get(plasmid, plasmid2, {msg1})

Get(additive, inducer, Select the inducer used for the experiment:)
Get(concentration, inducerStock, Enter the concentration of the {inducer} starting stock:)

Get(note, note)

GetExpID({startDate}_{inducer}_Cytom-FISH-prep)

//review experiment ok/abort dialog
Set(msg1, Review the following, then click 'OK' to accept or 'Abort' to abort and start over:\n\n)
Set(msg2, \tMedia: \t\t\t{media}\n\n \tBacteria: \t\t\t{strain1}, with {plasmid1}\n\n)
Set(msg3, \tInducer: \t\t\t{inducer}, stock concentration: {inducerStock}\n)
Set(msg5, \tExperiment ID: \n\t\t{experimentId}\n \tData directory: \n\t\t{dataDirectory}\n\n \tNotes:\n\t\t{note})
UserPrompt(Review Experiment Details: {experimentId}, {msg1} {msg2} {msg3} {msg5})

Set(msg1, Set up the STAR deck layout as shown.)
UserPrompt(STAR Deck Layout, {msg1}, {scriptDir}\STAR Deck Layout.cytometry and FISH.PNG, 1000)

Set(msg1, Close the front cover on the STAR.\n)
Set(msg2, Ensure that the Robot arm is in a safe position and that the Guard Override key is in the 'Off' position.\n)
Set(msg3, Check that all the doors of the S-Cell system are closed.\n)
Set(msg4, Then click 'OK' to start the experiment.\n)
UserPrompt(Ready to Start, {msg1}{msg2}{msg3}{msg4}, {lmsfImageDirectory}\dialog-warning.png)

//Lid movement test
UserPrompt(Lid Movement Test, Switch to the STAR computer and observe the lid movement test.)
RemoteHam(S-Cell-STAR, RunMethod, {sharedHamiltonMethodDir}\Pre-run lid test.No DNA extraction.hsl)
Timer(100)
WaitFor(Timer)
WaitFor(S-Cell-STAR)
UserPrompt(Lid Movement Test, If the STAR sucessfully moved the lids click 'OK' to start the experiment.)
// end lid movement test


WaitFor(Overlord)
//End User input and Overlord initialization section
//////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////
//Run the protocol
////////////////////////////////////////////////////////////////////////////////////

//--- 0 ------------------------------------------------------------------------------

//Test readers while 1st plate is pipetting
Gen5({mainReader}, CarrierOut)
WaitFor({mainReader}, false)
Set(msg, Plate reader {mainReader} should have its carrier out. \nVerify that the carrier is out and empty, then Click 'OK' to continue.)
UserPrompt(Check Readers, {msg})
Gen5({mainReader}, RunExp, {initProtocol}, pre-run-test, {dataDirectory})

Set(msg, Switch to STAR computer to edit tip counters, then Click 'OK' to continue.)
UserPrompt(Check Readers, {msg})
RemoteHam(S-Cell-STAR, RunMethod, {hamiltonTipDir}\Edit Tip Counters.hsl)
WaitFor(S-Cell-STAR)

//--- Plate 1 ------------------------------------------------------------------------------
Set(plateNum, 1)
Set(platesInStack, 2)
Set(spinPlatesInStack, 1)

Overlord({getNewGrowthPlate}, [Carousel.Stack.7.Labware.Count] {platesInStack})
Math(platesInStack, {platesInStack} - 1)
WaitFor(Overlord)

Set(worklistFile, {dataDirectory}\{experimentId}_growth-plate_{plateNum}.csv)
RemoteHam(S-Cell-STAR, RunMethod, {startMethod})
Timer(600)
WaitFor(Timer)
WaitFor(S-Cell-STAR)

WaitFor({mainReader}, false)

Gen5({mainReader}, CarrierOut)
WaitFor({mainReader}, false)

Overlord({ovpCommDirectory}\Move Growth Plate from STAR to Reader.ovp, [Gen5.Reader.Name] "{mainReader}" [Sealer.ManualSeal] "{manualSeal}")
WaitFor(Overlord)

Gen5({mainReader}, RunExp, {overNightProtocol}, {experimentId}_growth-plate_{plateNum}a, {dataDirectory})
GetTimeNow(readStartTime)
Math(readEndTime, {readStartTime} + {overNightProtocolTime})

//--- Plate 2 ----------------------------------------------------------------------------- 
Math(plateNum, {plateNum} + 1)

//Move new plate and tips before WaitFor(Timer) so user can make sure there is no Overlord error
Overlord({getNewGrowthPlate}, [Carousel.Stack.7.Labware.Count] {platesInStack} [STAR.Plate.Handling.Labware.Name] "Tips300" [STAR.Tip.300.Index] {tips300Index})
Math(tips300Index, {tips300Index} - 1)
Math(platesInStack, {platesInStack} - 1)
WaitFor(Overlord)

//Wait for reader to get close to finished before starting pipetting method
Math(pipetteStartTime, {readEndTime} - 2220)
Timer({pipetteStartTime})
WaitFor(Timer)

Set(worklistFile, {dataDirectory}\{experimentId}_growth-plate_{plateNum}.csv)
Set(dilutionFactor, 50)
Set(gradPlateNum, 1)
RemoteHam(S-Cell-STAR, RunMethod, {nonSelectiveGradientMethod})
WaitFor(S-Cell-STAR)

Math(preHeatStartTime, {readEndTime} - {preHeatPlateTime})
Timer({preHeatStartTime})
WaitFor(Timer)

RemoteHam(S-Cell-STAR, RunMethod, {preHeatPlateMethod})
WaitFor(S-Cell-STAR)

WaitFor({mainReader})
Gen5({mainReader}, CarrierOut)
WaitFor({mainReader}, false)

Overlord({ovpCommDirectory}\Move Growth Plate from Reader to STAR.ovp, [Gen5.Reader.Name] "{mainReader}")
WaitFor(Overlord)

Gen5({mainReader}, CarrierIn)
WaitFor({mainReader}, false)

Set(keepOldGrowthPlate, false)
RemoteHam(S-Cell-STAR, RunMethod, {copyPlateMethod})
WaitFor(S-Cell-STAR)

Gen5({mainReader}, CarrierOut)
WaitFor({mainReader}, false)

Overlord({ovpCommDirectory}\Move Growth Plate from STAR to Reader.ovp, [Gen5.Reader.Name] "{mainReader}" [Sealer.ManualSeal] "{manualSeal}")
WaitFor(Overlord)

Gen5({mainReader}, RunExp, {repeatProtocol}, {experimentId}_growth-plate_{plateNum}a, {dataDirectory})
GetTimeNow(readStartTime)
Math(readEndTime, {readStartTime} + {repeatProtocolTime})


//Set up timer to wait for reader to get close to finished before starting pipetting method for cytometry plate
Math(cytometryStartTime, {readEndTime} - 600)


//--- prep Cytometry Plate ----------------------------------------------------------------------------- 
Timer({cytometryStartTime})
WaitFor(Timer)
RemoteHam(S-Cell-STAR, RunMethod, {cytometryPrepMethod})
WaitFor(S-Cell-STAR)

Timer({readEndTime})
WaitFor(Timer)

WaitFor({mainReader})
Gen5({mainReader}, CarrierOut)
WaitFor({mainReader}, false)

//--- get GP from reader ----------------------------------------------------------------------------- 
Overlord({ovpCommDirectory}\Move Growth Plate from Reader to STAR.ovp, [Gen5.Reader.Name] "{mainReader}")
WaitFor(Overlord)

Gen5({mainReader}, CarrierIn)
WaitFor({mainReader}, false)

Set(keepOldGrowthPlate, true)
RemoteHam(S-Cell-STAR, RunMethod, {moveOldPlateMethod})
WaitFor(S-Cell-STAR)

//--- Move new spin plate for DNA extraction ------------------------------------------------------------
Overlord({getNewSpinPlate}, [Carousel.Stack.9.Labware.Count] {spinPlatesInStack})
Math(spinPlatesInStack, {spinPlatesInStack} - 1)
WaitFor(Overlord)

//--- transfer cells to Cytometry Plate ------------------------------------------------------------------
Set(cytomPlateNum, {plateNum})
Set(worklistFile, {dataDirectory}\{experimentId}_cytom-plate_{cytomPlateNum}.csv)
RemoteHam(S-Cell-STAR, RunMethod, {cytometryTransferMethod})
WaitFor(S-Cell-STAR)

//--- combine cells into Spin plate and centrifuge -------------------------------------------------------
RemoteHam(S-Cell-STAR, RunMethod, {combineToSpinPlateMethod})
WaitFor(S-Cell-STAR)

//Centrifuge the Spin plate and get new tips for DNA extraction
Overlord({centrifugeSpinPlate}, [Centrifuge.Speed] 4500 [Centrifuge.Time] 600 [Centrifuge.Temperature] 23)
WaitFor(Overlord)


//--- Clean up --------------------------------------------------------------------------------------


SaveXML()

CopyRemoteFiles()

Overlord({ovpCommDirectory}\Sealer Heater Off.ovp)
WaitFor(Overlord)
