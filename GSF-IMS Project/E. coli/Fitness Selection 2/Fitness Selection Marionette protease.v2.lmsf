
Set(sub_project, notAssigned)
Set(queueDirectory, notAssigned)
Set(inducer1, Van)
Set(inducer2, Sal)
Set(selector1, TMP)

// This is the concentration of Van that gets loaded into the LMSF
Set(inducer1StockConc, 500)

// These are the final Van concentration in the growth plates
Set(van_conc_1, 23.81)
Set(van_conc_2, 250)

// These are the final Sal concentrations in the growth plates
Set(sal_conc_1, 0.000000)
Set(sal_conc_2, 2.360080)
Set(sal_conc_3, 3.317586)
Set(sal_conc_4, 4.291738)
Set(sal_conc_5, 5.404725)
Set(sal_conc_6, 6.752859)
Set(sal_conc_7, 8.465933)
Set(sal_conc_8, 10.778718)
Set(sal_conc_9, 14.246961)
Set(sal_conc_10, 20.884706)
Set(sal_conc_11, 100.000000)

// These are the concentrations of the three Sal stocks that get loaded into the LMSF
Set(inducer2_1StockConc, 50)
Set(inducer2_2StockConc, 200)
Set(inducer2_3StockConc, 1000)

// This is the concentration of TMP that gets loaded into the LMSF, shold be 20x the concentration in the growth plate.
Set(selector1StockConc, 20)

Set(inducer1StockUnits, umol/L)
Set(inducer2StockUnits, umol/L)
Set(selector1StockUnits, ug/mL)

Set(media, notAssigned)
Set(percentDMSO, 0)

Set(strain1, notAssigned)
Set(plasmid1, notAssigned)
Set(plasmid2, notAssigned)
Set(plasmid3, notAssigned)
Set(plasmid4, notAssigned)

#InsertVariables

Set(inducer1Stock, {inducer1StockConc} {inducer1StockUnits})
Set(inducer2_1Stock, {inducer2_1StockConc} {inducer2StockUnits})
Set(inducer2_2Stock, {inducer2_2StockConc} {inducer2StockUnits})
Set(inducer2_3Stock, {inducer2_3StockConc} {inducer2StockUnits})
Set(selector1Stock, {selector1StockConc} {selector1StockUnits})

//isPipetting is a variable passed to the Hamilton Venus method; if isPipetting is true, the STAR will pipette liquids; otherwise the STAR just moves plates around
Set(isPipetting, true)
//isDebugging controls whether or not user debugging prompts/messages are displayed (both in LMSF and Hamilton)
Set(isDebugging, false)

//manualSeal controls whether sealing is manual or automatic
//Set(manualSeal, Yes)
Set(manualSeal, No)

/////////////////////////////////////////////////////////////////
//Read in commonly used directories
ReadScript(Common protocol scripts\Set Common Directories.lmsf)
Set(hamiltonMethodDir, C:\Program Files (x86)\Hamilton\Methods\GSF-IMS Project\E. coli Methods\Fitness Selection 2.With DNA Extraction)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Set directories for  .hsl, .opv, and .prt files that are specific to this experiment
// Overlord protocols are the same as for the last version
Set(ovpDirectory, C:\Program Files (x86)\PAA\Overlord3\Procedures\GSF-IMS\E. coli\Fitness Selection 1)
Set(scriptDir, GSF-IMS Project\E. coli\Fitness Selection 2)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Hamilton Venus Methods, in the order that they get run
Set(initHHCMethod, Turn on pre-heat HHC.hsl)
Set(startMethod, Uniform non-selective plate prep plus 4 strains.hsl)
Set(startMethodTime, 950)
Set(nonSelectiveGradientMethod, Marionette protease.gradient plate prep.v2.hsl)
Set(nonSelectivePlateTime, 1500)
// fold-dilution across dilution series in nonSelectiveGradientMethod and selectiveGradientMethod:

Set(preHeatPlateMethod, Pre-heat growth plate.hsl)
//Plate pre-heating method takes 12m:16s to run
//New version of Plate pre-heating method takes 11 minutes to run - leaves HHC on all the time
Set(preHeatPlateTime, 660)
// Subtract 2 minutes (i.e., start preheat 2 minutes later) for single read 
Math(preHeatPlateTime, {preHeatPlateTime} - 120)

Set(copyPlateMethod, Dilute-copy plate x-fold with 96-head.hsl)
Set(selectiveGradientMethod, Marionette protease.gradient plate prep.v2.hsl)
Set(selectivePlateTime, 1500)

//Venus method constrains 200<=cultureVolume<=500
Set(cultureVolume, 500)

/////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////
//Gen5 protocols to be run and associated timers:
//Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 16h.37C.1C.prt)
Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 12h.37C.1C.prt)
//overNightProtocolTime = nominal run time + 300
//Set(overNightProtocolTime, 57900)
Set(overNightProtocolTime, 43500)

Set(repeatProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 3h.37C.1C.prt)
//repeatProtocolTime = nominal run time + 300
Set(repeatProtocolTime, 11100)

Set(singleReadProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane single read.37C.1C.prt)
Set(singleReadProtocolTime, 68)

//Gen5 protocol for testing readers at beginning of run to give consistent starting state
Set(initProtocol, {gen5ProtDir}\Growth Plate w Membrane short test.prt)
/////////////////////////////////////////////////////////////////

//Set readers to be used
Set(mainReader, Neo)


//--- Scipt for initial steps that don't change ----------------------------------------------------------------------------- 
Set(isExtractingDNA, false)
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.init experiment.Marionette-protease.lmsf, is_v2_experiment=true)


//Get strain info from user if needed (i.e., if not assigned at #InsertVariables)
Set(needsStrainInput, false)
If({strain1} ==  notAssigned, Set(needsStrainInput, true))
If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid1}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid2}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid3}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid4}))

Set(msg, Select the bacteria strain used for the experiment:)
If({needsStrainInput} ==  true, Get(strain, strain1, {msg}))

If({needsStrainInput} ==  true, Get(plasmid, plasmid1, Select the plasmid used for rows A and B: tube position 10))
If({needsStrainInput} ==  true, Get(plasmid, plasmid2, Select the plasmid used for rows C and D: tube position 11))
If({needsStrainInput} ==  true, Get(plasmid, plasmid3, Select the plasmid used for rows E and F: tube position 12))
If({needsStrainInput} ==  true, Get(plasmid, plasmid4, Select the plasmid used for rows G and H: tube position 13))
//Needed for Hamilton:
Set(strain2, {strain1})

// For this type of experimentm, the user is never asked for the inducer or antibiotic info

AddXML(additives, additive)
AddXML(additive, useKey, antibiotic)
AddXML(additive, additiveId, {selector1})
AddXML(additive, concentration, {selector1Stock})

AddXML(additives, additive)
AddXML(additive, useKey, inducer)
AddXML(additive, additiveId, {inducer1})
AddXML(additive, concentration, {inducer1Stock})

AddXML(additives, additive)
AddXML(additive, useKey, inducer)
AddXML(additive, additiveId, {inducer2})
AddXML(additive, concentration, {inducer2_1Stock})
AddXML(additive, concentration, {inducer2_2Stock})
AddXML(additive, concentration, {inducer2_3Stock})


Set(msg1, {inducer1} stock concentration should be {inducer1Stock}.)
UserPrompt(Inducer Stocks, {msg1})

Set(msg1, The first {inducer2} stock concentration should be {inducer2_1Stock}.)
Set(msg1, {msg1}\nThe second {inducer2} stock concentration should be {inducer2_2Stock}.)
Set(msg1, {msg1}\nThe third {inducer2} stock concentration should be {inducer2_3Stock}.)
UserPrompt(Inducer Stocks, {msg1})

Set(msg1, The {selector1} stock concentration should be {selector1Stock}.)
UserPrompt(Antibiotic Stock, {msg1})


Get(note, note)

GetExpID({startDate}_Mar-Pro_OD-test-5-plates)

//review experiment ok/abort dialog
Set(msg1, Review the following, then click 'OK' to accept or 'Abort' to abort and start over:\n\n)

Set(media_str, {media})
If({percentDMSO} != 0, Set(media_str, {media_str} with {percentDMSO}% DMSO))
Set(msg2, \tMedia: \t\t{media_str}\n\n \tBacteria: \t\t{strain1}\n\n \tPlasmids:\n\t\t\t{plasmid1}\n\t\t\t{plasmid2}\n\t\t\t{plasmid3}\n\t\t\t{plasmid4}\n\n)

Set(msg3, \tInducer 1: \t{inducer1}, stock concentration: {inducer1Stock}\n)
Set(msg3, {msg3}\tInducer 2.1: \t{inducer2}, stock concentration: {inducer2_1Stock}\n)
Set(msg3, {msg3}\tInducer 2.2: \t{inducer2}, stock concentration: {inducer2_2Stock}\n)
Set(msg3, {msg3}\tInducer 2.3: \t{inducer2}, stock concentration: {inducer2_3Stock}\n)

Set(msg4, \tAntibiotic:\t{selector1}, stock concentration: {selector1Stock}\n)
Set(msg5, \tExperiment ID: \n\t\t{experimentId}\n \tData directory: \n\t\t{dataDirectory}\n\n \tNotes:\n\t\t{note})
Set(msg6, \n\n\{overNightProtocol}\n{repeatProtocol})
UserPrompt(Review Experiment Details: {experimentId}, {msg1} {msg2} {msg3}\n{msg4} {msg5}{msg6})

Set(msg1, Set up the STAR deck layout as shown.)
Set(msg1, {msg1}\n\tInducer 1: {inducer1Stock} {inducer1})
Set(msg1, {msg1}\n\tInducer 2.1: {inducer2_1Stock} {inducer2})
Set(msg1, {msg1}\n\tInducer 2.2: {inducer2_2Stock} {inducer2})
Set(msg1, {msg1}\n\tInducer 2.3: {inducer2_3Stock} {inducer2})
Set(msg1, {msg1}\n\tAntibiotic: {selector1Stock} {selector1})

Set(deck_layout_file, {scriptDir}\STAR Deck Layout.Marionette protease.PNG)
If({is_v2_experiment}==true, Set(deck_layout_file, {scriptDir}\STAR Deck Layout.Marionette protease.v2.PNG))

UserPrompt(STAR Deck Layout, {msg1}, {deck_layout_file}, 1000)

Set(msg1, Load the bacterial strains as shown.)
Set(msg1, {msg1}\n\tPosition 10: {plasmid1} in {strain1})
Set(msg1, {msg1}\n\tPosition 11: {plasmid2} in {strain1})
Set(msg1, {msg1}\n\tPosition 12: {plasmid3} in {strain1})
Set(msg1, {msg1}\n\tPosition 13: {plasmid4} in {strain1})
UserPrompt(Load Strains, {msg1}, {scriptDir}\Load strains.Marionette protease.PNG, 1000)

//--- Growth Plates 1 and 2 prep and growth ----------------------------------------------------------------------------- 
Set(startWithInducer, No)
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.plates 1 and 2.lmsf, lidTestMethod={hamiltonMethodDir}\Pre-run lid test.No Abgene.hsl)

//--- Growth Plate 3 prep and OD Read from Plate 2 ----------------------------------------------------------------------------- 
// For for this experiment, need to clear waste tip rack (no new 1000s added after plate 2)
Set(clear300TipWaste, true)

ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.Repeat.with single OD read.lmsf)

// --- Add more tips before plate 4 ---
// First, get rid of the remaining tips on the deck, this will leave both 300 tip supports empty
ReadScript(Common protocol scripts\STAR Clear 300 tips.lmsf, clear_300_tips_from=2, clear_300_tips_to=2)
// Then, add two racks of 300s
ReadScript(Common protocol scripts\Add a rack of 300 tips.lmsf, clearTipRack=true)
ReadScript(Common protocol scripts\Add a rack of 300 tips.lmsf, clearTipRack=false)

//Then, check on the count of 1000 tips, and add them if needed
ReadScript(Common protocol scripts\Need Tips.lmsf, clearTipRack=false, tips1000Need=52)

Set(clear300TipWaste, false)

//--- Growth Plate 4 prep and OD Read from Plate 3 ----------------------------------------------------------------------------- 
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.Repeat.with single OD read.lmsf)


// --- Add more tips before plate 5 ---
// First, get rid of any tips remaining in the first support, in case any were skipped becasue of bad pickup
ReadScript(Common protocol scripts\STAR Clear 300 tips.lmsf, clear_300_tips_from=1, clear_300_tips_to=3)
// Then, add one more rack of 300s, after plate 4 is put into the reader, there will be an empty tip rack in the STAR handoff position, so need to clear it
ReadScript(Common protocol scripts\Add a rack of 300 tips.lmsf, clearTipRack=true)

//Then, check on the count of 1000 tips, and add them if needed
ReadScript(Common protocol scripts\Need Tips.lmsf, clearTipRack=false, tips1000Need=52)

Set(clear300TipWaste, false)

//--- Growth Plate 5 prep and OD Read from Plate 4 ----------------------------------------------------------------------------- 
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.Repeat.with single OD read.lmsf)

//--- OD Read from Plate 5 and cleanup -------------------------------------------------------------------
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.plate 5 single OD read.lmsf)
