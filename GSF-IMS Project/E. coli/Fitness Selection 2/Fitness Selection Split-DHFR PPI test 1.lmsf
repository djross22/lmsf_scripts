
Set(sub_project, notAssigned)
Set(queueDirectory, notAssigned)
Set(inducer1, Van)
Set(inducer2, Sal)
Set(selector1, TMP)

Set(inducer1StockConc, 400)
Set(inducer2_1StockConc, 62.5)
Set(inducer2_2StockConc, 125)
Set(inducer2_3StockConc, 250)
Set(inducer2_4StockConc, 500)
Set(selector1StockConc, 10)

Set(inducer1StockUnits, umol/L)
Set(inducer2StockUnits, umol/L)
Set(selector1StockUnits, ug/mL)

Set(media, notAssigned)
Set(percentDMSO, 0)
Set(dilutionSeriesFactor, 5)

Set(strain1, notAssigned)
Set(plasmid1, notAssigned)
Set(plasmid2, notAssigned)
Set(plasmid3, notAssigned)
Set(plasmid4, notAssigned)

#InsertVariables

Set(inducer1Stock, {inducer1StockConc} {inducer1StockUnits})
Set(inducer2_1Stock, {inducer2_1StockConc} {inducer2StockUnits})
Set(inducer2_2Stock, {inducer2_2StockConc} {inducer2StockUnits})
Set(inducer2_3Stock, {inducer2_3StockConc} {inducer2StockUnits})
Set(inducer2_4Stock, {inducer2_4StockConc} {inducer2StockUnits})
Set(selector1Stock, {selector1StockConc} {selector1StockUnits})

//isPipetting is a variable passed to the Hamilton Venus method; if isPipetting is true, the STAR will pipette liquids; otherwise the STAR just moves plates around
Set(isPipetting, true)
//isDebugging controls whether or not user debugging prompts/messages are displayed (both in LMSF and Hamilton)
Set(isDebugging, false)

//manualSeal controls whether sealing is manual or automatic
//Set(manualSeal, Yes)
Set(manualSeal, No)

/////////////////////////////////////////////////////////////////
//Read in commonly used directories
ReadScript(Common protocol scripts\Set Common Directories.lmsf)
Set(hamiltonMethodDir, C:\Program Files (x86)\Hamilton\Methods\GSF-IMS Project\E. coli Methods\Fitness Selection 2.With DNA Extraction)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Set directories for  .hsl, .opv, and .prt files that are specific to this experiment
// Overlord protocols are the same as for the last version
Set(ovpDirectory, C:\Program Files (x86)\PAA\Overlord3\Procedures\GSF-IMS\E. coli\Fitness Selection 1)
Set(scriptDir, GSF-IMS Project\E. coli\Fitness Selection 2)
/////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
//Hamilton Venus Methods, in the order that they get run
Set(initHHCMethod, Turn on pre-heat HHC.hsl)
Set(startMethod, Uniform non-selective plate prep plus 4 strains.hsl)
Set(startMethodTime, 950)
Set(nonSelectiveGradientMethod, Marionette protease.gradient plate prep.hsl)
Set(nonSelectivePlateTime, 1140)
// fold-dilution across dilution series in nonSelectiveGradientMethod and selectiveGradientMethod:

Set(preHeatPlateMethod, Pre-heat growth plate.hsl)
//Plate pre-heating method takes 12m:16s to run
//New version of Plate pre-heating method takes 11 minutes to run - leaves HHC on all the time
Set(preHeatPlateTime, 660)
// Subtract 2 minutes (i.e., start preheat 2 minutes later) for single read 
Math(preHeatPlateTime, {preHeatPlateTime} - 120)

Set(copyPlateMethod, Dilute-copy plate x-fold with 96-head.hsl)
Set(selectiveGradientMethod, Marionette protease.gradient plate prep.hsl)
Set(selectivePlateTime, 1140)

//Venus method constrains 200<=cultureVolume<=500
Set(cultureVolume, 500)

/////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////
//Gen5 protocols to be run and associated timers:
//Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 16h.37C.1C.prt)
Set(overNightProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 12h.37C.1C.prt)
//overNightProtocolTime = nominal run time + 300
//Set(overNightProtocolTime, 57900)
Set(overNightProtocolTime, 43500)

Set(repeatProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 3h.37C.1C.prt)
//repeatProtocolTime = nominal run time + 300
Set(repeatProtocolTime, 11100)

Set(plate3Protocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane 12h.37C.1C.prt)
//protocol time = nominal run time + 300
Set(plate3ProtocolTime, 43500)

Set(singleReadProtocol, {gen5ProtDir}\GSF-IMS-E-Coli\Growth Plate w Membrane single read.37C.1C.prt)
Set(singleReadProtocolTime, 78)

//Gen5 protocol for testing readers at beginning of run to give consistent starting state
Set(initProtocol, {gen5ProtDir}\Growth Plate w Membrane short test.prt)
/////////////////////////////////////////////////////////////////

//Set readers to be used
Set(mainReader, Neo)


//--- Scipt for initial steps that don't change ----------------------------------------------------------------------------- 
Set(isExtractingDNA, false)
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.init experiment.Split DHFR PPI.lmsf)


//Get strain info from user if needed (i.e., if not assigned at #InsertVariables)
Set(needsStrainInput, false)
If({strain1} ==  notAssigned, Set(needsStrainInput, true))
If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid1}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid2}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid3}))

If({needsStrainInput} !=  true, AddXML(strains, strain))
If({needsStrainInput} !=  true, AddXML(strain, strainId, {strain1}))
If({needsStrainInput} !=  true, AddXML(strain, plasmidId, {plasmid4}))

Set(msg, Select the bacteria strain used for the experiment:)
If({needsStrainInput} ==  true, Get(strain, strain1, {msg}))

If({needsStrainInput} ==  true, Get(plasmid, plasmid1, Select the plasmid used for rows A and B: tube position 10))
If({needsStrainInput} ==  true, Get(plasmid, plasmid2, Select the plasmid used for rows C and D: tube position 11))
If({needsStrainInput} ==  true, Get(plasmid, plasmid3, Select the plasmid used for rows E and F: tube position 12))
If({needsStrainInput} ==  true, Get(plasmid, plasmid4, Select the plasmid used for rows G and H: tube position 13))
//Needed for Hamilton:
Set(strain2, {strain1})

// For this type of experimentm, the user is never asked for the inducer or antibiotic info

AddXML(additives, additive)
AddXML(additive, useKey, antibiotic)
AddXML(additive, additiveId, {selector1})
AddXML(additive, concentration, {selector1Stock})

AddXML(additives, additive)
AddXML(additive, useKey, inducer)
AddXML(additive, additiveId, {inducer1})
AddXML(additive, concentration, {inducer1Stock})

AddXML(additives, additive)
AddXML(additive, useKey, inducer)
AddXML(additive, additiveId, {inducer2})
AddXML(additive, concentration, {inducer2_1Stock})
AddXML(additive, concentration, {inducer2_2Stock})
AddXML(additive, concentration, {inducer2_3Stock})
AddXML(additive, concentration, {inducer2_4Stock})


Set(msg1, {inducer1} stock concentration should be {inducer1Stock}.)
UserPrompt(Inducer Stocks, {msg1})

Set(msg1, The first {inducer2} stock concentration should be {inducer2_1Stock}.)
Set(msg1, {msg1}\nThe second {inducer2} stock concentration should be {inducer2_2Stock}.)
Set(msg1, {msg1}\nThe third {inducer2} stock concentration should be {inducer2_3Stock}.)
Set(msg1, {msg1}\nThe forth {inducer2} stock concentration should be {inducer2_4Stock}.)
UserPrompt(Inducer Stocks, {msg1})

Set(msg1, The {selector1} stock concentration should be {selector1Stock}.)
UserPrompt(Antibiotic Stock, {msg1})


Get(note, note)

GetExpID({startDate}_Split-DHFR-PPI-test-3-plates)

//review experiment ok/abort dialog
Set(msg1, Review the following, then click 'OK' to accept or 'Abort' to abort and start over:\n\n)

Set(media_str, {media})
If({percentDMSO} != 0, Set(media_str, {media_str} with {percentDMSO}% DMSO))
Set(msg2, \tMedia: \t\t{media_str}\n\n \tBacteria: \t\t{strain1}\n\n \tPlasmids:\n\t\t\t{plasmid1}\n\t\t\t{plasmid2}\n\t\t\t{plasmid3}\n\t\t\t{plasmid4}\n\n)

Set(msg3, \tInducer 1: \t{inducer1}, stock concentration: {inducer1Stock}\n)
Set(msg3, {msg3}\tInducer 2.1: \t{inducer2}, stock concentration: {inducer2_1Stock}\n)
Set(msg3, {msg3}\tInducer 2.2: \t{inducer2}, stock concentration: {inducer2_2Stock}\n)
Set(msg3, {msg3}\tInducer 2.3: \t{inducer2}, stock concentration: {inducer2_3Stock}\n)
Set(msg3, {msg3}\tInducer 2.4: \t{inducer2}, stock concentration: {inducer2_4Stock}\n)

Set(msg4, \tAntibiotic:\t{selector1}, stock concentration: {selector1Stock}\n)
Set(msg5, \tExperiment ID: \n\t\t{experimentId}\n \tData directory: \n\t\t{dataDirectory}\n\n \tNotes:\n\t\t{note})
Set(msg6, \n\n\{overNightProtocol}\n{repeatProtocol}\n{plate3Protocol})
UserPrompt(Review Experiment Details: {experimentId}, {msg1} {msg2} {msg3}\n{msg4} {msg5}{msg6})

Set(msg1, Set up the STAR deck layout as shown.)
Set(msg1, {msg1}\n\tInducer 1: {inducer1Stock} {inducer1})
Set(msg1, {msg1}\n\tInducer 2.1: {inducer2_1Stock} {inducer2})
Set(msg1, {msg1}\n\tInducer 2.2: {inducer2_2Stock} {inducer2})
Set(msg1, {msg1}\n\tInducer 2.3: {inducer2_3Stock} {inducer2})
Set(msg1, {msg1}\n\tInducer 2.4: {inducer2_4Stock} {inducer2})
Set(msg1, {msg1}\n\tAntibiotic: {selector1Stock} {selector1})
UserPrompt(STAR Deck Layout, {msg1}, {scriptDir}\STAR Deck Layout.Marionette protease.PNG, 1000)

Set(msg1, Load the bacterial strains as shown.)
Set(msg1, {msg1}\n\tPosition 10: {plasmid1} in {strain1})
Set(msg1, {msg1}\n\tPosition 11: {plasmid2} in {strain1})
Set(msg1, {msg1}\n\tPosition 12: {plasmid3} in {strain1})
Set(msg1, {msg1}\n\tPosition 13: {plasmid4} in {strain1})
UserPrompt(Load Strains, {msg1}, {scriptDir}\Load strains.Marionette protease.PNG, 1000)

//--- Growth Plates 1 and 2 prep and growth ----------------------------------------------------------------------------- 
Set(startWithInducer, No)
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.plates 1 and 2.lmsf, lidTestMethod={hamiltonMethodDir}\Pre-run lid test.No Abgene.hsl, growthPlatesNeeded=3)

//--- Growth Plate 3 prep and OD Read from Plate 2 ----------------------------------------------------------------------------- 
// For for this experiment, need to clear waste tip rack (no new 1000s added after plate 2)
Set(clear300TipWaste, true)

ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.long_plate_3.with single OD read.lmsf)


//--- OD Read from Plate 5 and cleanup -------------------------------------------------------------------
// Note: although the sub-script called is "plate 5" here, it is actually plate 3 for this experiment.
ReadScript(GSF-IMS Project\E. coli\Fitness Selection 2\Fitness Selection.plate 5 single OD read.lmsf)
